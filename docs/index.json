[{"categories":null,"contents":"Addressed pretty significant page load performance issue founde in larger deployments. Eliminates uses of intensive backend query, replacing it with an asynchronous API call against a lucene index. This change reduces page load from from 2+ minutes to nearly instant, with an incredibly responsive UI.\n","permalink":"https://greent3.github.io/projects/contributions/deploy-triggers/","tags":["Java","jQuery","REST APIs","Bamboo","JSON"],"title":"Atlassian Deployment Triggers"},{"categories":null,"contents":"Summary:\nWe humans react not to events, but rather our judgement about said events. Change your judgements to change your world. Focus only on what you can control. Awareness and rational preparation have value to the future at low cost to the present, but worrying about what one can not know or control of the future has no value to either, and comes at the cost of the present It\u0026rsquo;s human nature to compare yourself against those more fortunate. However, if you only do relative comparisons with those less fortunate than you, and your ambitions will be fueled by gratitude rather than anger/envy. ","permalink":"https://greent3.github.io/publications/stoicism/","tags":[],"title":"3 Key Concepts of Stoicism"},{"categories":null,"contents":"TL;DR\nWe humans react not to events, but rather our judgement about said events. Change your judgements to change your world. Focus only on what you can control. Awareness and rational preparation have value to the future at low cost to the present, but worrying about what one can not know or control of the future has no value to either, and comes at the cost of the present It\u0026rsquo;s human nature to compare yourself against those more fortunate. However, if you only do relative comparisons with those less fortunate than you, and your ambitions will be fueled by gratitude rather than anger/envy. ","permalink":"https://greent3.github.io/publications/consumptionhabits/","tags":[],"title":"habits of different consumers (mandarin)"},{"categories":null,"contents":"I talk about some lessons I learned from Google\u0026rsquo;s TinyML courses, as well as demonstrate my final project.\n","permalink":"https://greent3.github.io/publications/summarizingtinyml/","tags":[],"title":"Key takeaways from Google's TinyML courses"},{"categories":null,"contents":"Shields.io is a massive library of badges that can be inserted into project README\u0026rsquo;s or websites displaying various statuses (code coverage, health, version, etc). Support for docker was missing the current build health, and was a pretty trivial addition.\n","permalink":"https://greent3.github.io/projects/contributions/shields-docker/","tags":["Docker","Rest APIs","JavaScript","node.js","JSON"],"title":"Added Docker Build Status Badge to shields.io"},{"categories":null,"contents":"While adding Structured Data to a client\u0026rsquo;s website I found some example JSON that was invalid. Simple contribution to cleanup the user documentation providing syntactically valid JSON documents.\n","permalink":"https://greent3.github.io/projects/contributions/schema-org/","tags":["JSON"],"title":"Schema.org Structured Data documentation fixes"},{"categories":null,"contents":"Intro Doesn\u0026rsquo;t matter whether it\u0026rsquo;s a CakePHP app for a client, your own personal CMS, or any other web based application. If your passing around passwords or other sensitive info you should really implement SSL. SSL provides 2 main perks to your visitors.\nFirst it encrypts all communication that flies across the web. This prevents curious or devious billies from getting your secrets. Secondly it ensures to the user that your server is in fact who it claims, and not a nasty \u0026lsquo;man in the middle\u0026quot; attack. Finally it gives your site that touch of class\u0026hellip;. which of course a classy person like yourself relies on. Once you implement SSL certificates on your server you\u0026rsquo;ll want to require secure connections using Apache\u0026rsquo;s rewrite module. Now I won\u0026rsquo;t dwell on the creation and signing of certificates, its already well documented. If your just starting out though,heres a few links I recommend;\nCreating self-signed certificates (free, but should only be used internally or for testing, users will; see an \u0026lsquo;Untrusted\u0026quot; warning) Requesting a CA Signed certificate (not free, but the final certificate is trusted and seamless for users) The second link uses the schools internal CA, you will need to pay a public CA like Entrust or Verisign. All of this information is aimed at \u0026rsquo;nix or solaris servers running apache. Why? cause a production windows server is laughable :-p\nNow that you have a certificate, whats next? So there you are you have a shiny new Certificate and Server key, how do you force visitors to your apache driven site to use the SSL? You copied the certificates into the appropite locations right? And you have made the needed changes in httpd.conf right? So now when you view https://example.com you see a \u0026rsquo;trusted\u0026rsquo; warning or your site right? If No to any of these than this article does a pretty good job of outlining those steps.\nThe SSL Works, How do I force connections to use it? First you need to decide if you want to force every page on your site to use SSL, or only a particular sub-domain, or maybe just your admin directory. Since the overhead is minimal there is no harm is forcing the entire domain to leverage SSL, but if it is a self-signed certificate for your personal use than you\u0026rsquo;ll most certainly want to restrict its use to your own areas. This prevents users from seeing that nasty warning \u0026ldquo;This server is not trusted\u0026rdquo; You\u0026rsquo;ll know if your using SSL because the url prefix changes from http to https (s for secure).\nForcing entire domain to use SSL You want any visit, any where to use ssl. This probably the simplest solution. Create or append to your htaccess file in the top directory of your server. Some people use a port check (80 is typically http, while 443 is https) but if you have alernate configs or the user just adds :8080 to the end of the url this method is useless. Instead check whether the https environmental variable is set, if not then redirect.\nRewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://%{SERVER_NAME}$1 \\[R,L\\] Forcing sub-domains to use SSL Maybe you only want mysecretarea.example.com to use SSL, that\u0026rsquo;s easy enough. Its the same premise as above, but you move the htaccess file into the directory that corresponds to the subdomain. Also change the second line like below;\nRewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://mysecretarea.%{SERVER_NAME}$1 \\[R,L\\] Forcing a directory to use SSL This method cn get a little hairier if your using aliases or redirects on top of this one. You\u0026rsquo;ll need to consider what order the commands are read. The basic principle is like so. You want all visits to example.com/admin to use ssl. Create a htaccess file in the parent directory. Again will check for the https variable, but this time we also check for the sub-directory to be in the path.\nRewriteCond %{HTTPS} !=on RewriteRule ^/admin/(.*)$ https://%{SERVER_NAME}/admin/$1 \\[R,L\\] ","permalink":"https://greent3.github.io/blog/force-ssl/","tags":["apache","apache","redirect","rewrite","ssl","web development"],"title":"Forcing Visits to use SSL"},{"categories":null,"contents":"With SQL queries, we\u0026rsquo;re able to answer questions like:\nDo graduate degree holders use caffeine more often than less educated people? Which illegal drugs are becoming more popular over the decades? Are less educated people more likely to lie about (overreport) drug usage? Do senior citizens smoke \u0026amp; drink less than young adults? ","permalink":"https://greent3.github.io/projects/creations/1_drug_survey_analysis/","tags":["MySQL","Data Analysis"],"title":"A. Drug Use by Education"},{"categories":null,"contents":"Coming Soon!\n","permalink":"https://greent3.github.io/projects/creations/2_e-learning/","tags":["Python","Django"],"title":"B. Django E-Learning Platform"},{"categories":null,"contents":"As research continues in the development of self-driving cars, one of the key challenges is allowing these cars to develop an understanding of their environment from digital images.\nIn my traffic-sign classification project, I used TensorFlow and the German Traffic Sign Recognition Benchmark dataset to build a neural network that puts images of road signs into different classifications.\nMy role consisted of loading the data (images) into the program, resizing the images, and designing/implementing the neural network. For the neural network, I used the following layer structure:\nConv2D layer with 3x3 kernel -\u0026gt; 2x2 Max pooling layer -\u0026gt; Conv2D layer with 3x3 kernel -\u0026gt; Flattening layer -\u0026gt; Relu Activation function -\u0026gt; Dropout -\u0026gt; Softmax\n","permalink":"https://greent3.github.io/projects/creations/3_road_sign_classifier/","tags":["Python","TensorFlow","Classification","Computer Vision"],"title":"C. TensorFlow Road Sign Classifier"},{"categories":null,"contents":"The project is divided into 2 apps. Movielist app: handles all movie database functionality (adding movies to the database, querying lists of movies, creating/viewing reviews, etc.) along with their associated permissions. User app: handles user functionality (login, register, etc.) The unit testing covers all intented functionality for each level of authentication. The project also employs validators, pagination, and throttling.\n","permalink":"https://greent3.github.io/projects/creations/4_restful-imdb/","tags":["Python","Django","RESTful API","SQLite"],"title":"D. RESTful Movie Database API w/ extensive unit testing"},{"categories":null,"contents":"SITUATION: You show up to work one morning and the head of the product team asks you what you think about the latest activity on the user engagement dashboards. You fire them up and notice a decline in users over the past 2 months.\nACTION: Using focused SQL queries to gather data about user events over the past couple months and Excel for data visualization, I was able to provide the following conclusions and recommendations.\nCONCLUSIONS: Considering we hit a new ATH for new users created on the week of 28July, and that most of our events come from established user engagement, It’s unlikely that the sharp decline is correlated with a drop in new user sign-ups.\nThe decline in weekly active users beginning on 28July could be due to multiple factors:\na) On the week of 28July, our 2nd largest user, Company with ID# 2, saw an overall decrease in events of 42% from the week prior. This decrease percentage was roughly the same across the Company 2’s top 10 contributing countries, and is therefore unlikely related to a geographical event like a localized holiday or natural disaster.\nb) Beginning 28 July, when measuring Company2’s general events, or events that aren’t related to signing up, the decrease in events related to Yammer’s search functionality was 22% higher than the decrease in events not related to yammers search functionality.\nc) This observation is even stronger the following week, with the average decrease in search functionality related events being 48% more than the ones unrelated. This could mean that the search results being provided to company2 are not useful, or irrelevant.\nLastly, on average, our click-through-rate for our weekly emails that get opened have been decreasing across all companies since 21 July. This might mean our emails are becoming less and less interesting or relevant to users.\nRECOMMENDATIONS: I recommend we reach out to users at company2 to get feedback on our apps search functionality and see if they’ve started using a competitor\u0026rsquo;s product.\nIf we’ve recently changed some code in our search functionality or information in user profiles for company2, it might be worth changing them back until we figure out why the new changes are unpopular among company2\u0026rsquo;s users.\nLastly, along with taking a close look at 28July’s unpopular weekly digest email, we could implement some A/B testing for our weekly digest emails to improve our % of opened emails and average click through rate.\n","permalink":"https://greent3.github.io/projects/creations/5_analyzing_user_decrease/","tags":["SQL","Excel","Data Analysis","Jupyter"],"title":"E. Investigating User Decline"},{"categories":null,"contents":"Uses recursion, pointers, operator overloading, debug mode, copy constructors, and makefiles.\nLinked-list implementation of a customer information database. User can add, print, modify, and delete records within the database. The user can also reverse the list of records.\nThe records within the list are written to a file upon exiting the application, and read from a file upon starting an application.\n","permalink":"https://greent3.github.io/projects/creations/6_customer_record_database/","tags":["C++","Data Structures","Unix"],"title":"F. C++ Customer Database Using Files"},{"categories":null,"contents":"When we run our program, we pass the location of a CSV file containing data about website shoppers as a command line argument. Our program:\nloads in that data reformats it into the correct data type splits it into training and testing data uses that data to train a k-nearest neighbors classification model and outputs the sensitivity (true positive rate) and specificity (true negative rate) of our trained model on our testing data. ","permalink":"https://greent3.github.io/projects/creations/7_knn_purchase_predictor/","tags":["Python","ML","KNN","Classification"],"title":"G. Ecommerce Purchase Predictor"},{"categories":null,"contents":"Classifying Japanese Whisky reviews using TFIDF/Naive Bayes\nGiven a CSV file with 200 Japanese whisky reviews labeled \u0026ldquo;positive\u0026rdquo; or \u0026ldquo;negative\u0026rdquo;, and 900 unlabeled reviews, let\u0026rsquo;s train a Naive Bayes model on TFIDF data so we can predict the labels for the remaining 900.\nNote: The dataset was not that great (small, lots of typos, many negative reviews with positive sentiment words \u0026ldquo;ex: not that good\u0026rdquo;), but it still served as good practice for cleaning data, NB, vectorizers, working with dataframes, and even a little bit of SQL at the end.\n","permalink":"https://greent3.github.io/projects/creations/8_naive_bayes_review_classifier/","tags":["Python","Classification","TFIDF","Naive Bayes"],"title":"H. Whisky Review Sentiment Classifier"},{"categories":null,"contents":"","permalink":"https://greent3.github.io/projects/creations/9_car_price_predictor/","tags":["Python","ML","Regression","Random Forest"],"title":"I. Car Price Predictor"},{"categories":null,"contents":"Buys or sells an equity in anticipation of the 5 period SMA crossing the 20 period SMA and employs a trailing stoploss. Resolution, SMA periods, stoplosses, and order entry/exit points are all optimizable.\nVideo linked below!\n","permalink":"https://greent3.github.io/projects/creations/93_golden_cross/","tags":["Python","Trading","Algo"],"title":"J. Golden Cross Trading Algo (video)"},{"categories":null,"contents":"Providing simple, yet comprehensive examples of Bob Martin\u0026rsquo;s SOLID principles, using C++.\nVideo series linked below!\n","permalink":"https://greent3.github.io/projects/creations/94_c++_video_series/","tags":["C++","OOP","Video"],"title":"K. C++ SOLID Video Series"},{"categories":null,"contents":"Yay! We convinced our buddy (Doug) to watch Detective Conan! However, he already read the manga and doesn\u0026rsquo;t want to watch episodes that he\u0026rsquo;s already read. No worries! Let\u0026rsquo;s use the data at Detective Conan Wiki to compile a list of episodes that weren\u0026rsquo;t in the manga.\n","permalink":"https://greent3.github.io/projects/creations/95_scraping_detective_conan/","tags":["Python","Web Scraping"],"title":"L. Detective Conan Web Scraper"},{"categories":null,"contents":"By playing against itself repeatedly and learning from experience, eventually our AI will learn which actions to take and which actions to avoid when playing Nim. We do this through Q-learning, or assigning a reward value for every (state, action) pair. We’ll represent the game as an array (game board) of numbers (# of pieces in each row).\n","permalink":"https://greent3.github.io/projects/creations/96_nim_bot/","tags":["Python","ML","Unsupervised Learning"],"title":"M. Teaching a robot NIM"},{"categories":null,"contents":"A timer with customizable parameters for work time and break time.\nImplemented in 3 ways: as a single page stateful REACT app, a stateful app divided into parent \u0026amp; child classes, and an app made of functional components using hooks.\nWhat Is the Pomodoro Technique? Using this method, you break your workday into 25-minute chunks separated by five-minute breaks. These intervals are referred to as pomodoros.\nEvery time the clock runs out, the timer automatically resets and switches to work/break session.\n","permalink":"https://greent3.github.io/projects/creations/99_25+5_clock/","tags":["React","Hooks","CSS","HTML","JavaScript"],"title":"O. React Pomodoro Timer"},{"categories":null,"contents":"TicTacToe AI that uses a recursive minimax algorithm to determine the best possible move to make based on the best possible move their opponent (me) can play on the next turn.\nOur algorithm also keeps track of who\u0026rsquo;s turn it is, all possible moves given the current state of the board, and whether or not someone has won the game.\nCompleted as part of Harvard\u0026rsquo;s AI with programming course.\n","permalink":"https://greent3.github.io/projects/creations/991_tic_tac_toe/","tags":["Python","AI","Minimax"],"title":"P. TicTacToe AI"},{"categories":null,"contents":"An AI capable of successfully finishing a game of minesweeper\nLogic is stored in the form of sentences, and the program uses a recursive algorithm to make inferences based on new knowledge obtained by clicking unexplored cells.\nThe bot does not always win as sometimes there are no safe cells to click, and at that point the bot will have to make a random move.\nCompleted as part of Harvard\u0026rsquo;s AI programming with python course.\n","permalink":"https://greent3.github.io/projects/creations/992_minesweeper/","tags":["Python","AI","Minimax"],"title":"Q. Minesweeper AI"},{"categories":null,"contents":"Brute force solving a crossword puzzle with unary constraints (length of words) and binary constraints (overlapping letters between words).\nThe AI uses domains to manage possible words that can be used in the puzzle. When the program reaches a point where a constraint is no longer satisfied, it backtracks and removes unusable words from the domain.\nCompleted as part of Harvard\u0026rsquo;s AI programming with Python course.\n","permalink":"https://greent3.github.io/projects/creations/993_ai_crossword_constraint/","tags":["Python","AI","Constraint Satisfaction"],"title":"R. Constraint Satisfication Crossword Solver"},{"categories":null,"contents":"An \u0026lsquo;out\u0026rsquo; is a card that you have yet to see and can improve your hand in Texas Hold\u0026rsquo;em. This app shuffles a deck, gives every player at the table a hand of 2 cards, deals a flop, and then uses the cards in the flop and your hand to determine which cards are necessary to increase the value of your hand.\nNote: I wrote this program while quarantined in my dorm at University. However, this was prior to my discovery of BOB Martins SOLID principles and other common coding standards like DRY, so my code is a bit long and ugly. However, it served as a way for me to practice OOP and I would not be where I am today had I not practiced :)\nToday, I try to keep my functions as short as possible (esp main), and, when practical, structure functions to be reusable.\n","permalink":"https://greent3.github.io/projects/creations/994_calculate_my_outs/","tags":["Java","OOP"],"title":"S. Calculate My Outs (Texas Hold'em)"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}}, \u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }}, ... Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026#34;title\u0026#34;, \u0026#34;contents\u0026#34;, \u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34; ] ","permalink":"https://greent3.github.io/search/","tags":null,"title":"Search Results"},{"categories":null,"contents":"A playable game completed as a university project with the following specifications: The player\u0026rsquo;s health decreases when it moves\nThe player\u0026rsquo;s health can be rejuvinated when within proximity to items (sodas and doughnuts)\nThe player\u0026rsquo;s health decreaes when within proximity to enemies (old man herbert)\nThe game will end when the player runs out of health\n","permalink":"https://greent3.github.io/projects/creations/995_herbert/","tags":["Java"],"title":"T. Watch out for Old Man Herbert!"}]