<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Constraint Satisfaction on Travis Green</title>
    <link>https://greent3.github.io/tags/constraint-satisfaction/</link>
    <description>Recent content in Constraint Satisfaction on Travis Green</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://greent3.github.io/tags/constraint-satisfaction/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python ML: Constraint Satisfication Crossword Solver</title>
      <link>https://greent3.github.io/projects/creations/993_ai_crossword_constraint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://greent3.github.io/projects/creations/993_ai_crossword_constraint/</guid>
      <description>Brute force solving a crossword puzzle with unary constraints (length of words) and binary constraints (overlapping letters between words).
The AI uses domains to manage possible words that can be used in the puzzle. When the program reaches a point where a constraint is no longer satisfied, it backtracks and removes unusable words from the domain.
Completed as part of Harvard&amp;rsquo;s AI programming with Python course.</description>
    </item>
    
  </channel>
</rss>
