<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Django on Travis Green</title>
    <link>https://greent3.github.io/tags/django/</link>
    <description>Recent content in Django on Travis Green</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://greent3.github.io/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. ML App with Django Backend - Deployed using AWS</title>
      <link>https://greent3.github.io/projects/creations/0_best_project_yet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://greent3.github.io/projects/creations/0_best_project_yet/</guid>
      <description>Coming Soon!</description>
    </item>
    
    <item>
      <title>A. Django E-Learning Platform</title>
      <link>https://greent3.github.io/projects/creations/2_e-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://greent3.github.io/projects/creations/2_e-learning/</guid>
      <description>Back-end of an online learning platform built using Python Django
Some features of the project:
A content management system (CMS) model inheritance class based views and mixins formsets and model formsets groups and permissions dynamic content caching (Memcache &amp;amp; redis) A callable RESTful API to interact with course data This project was completed as a tutorial outlined in Packt&amp;rsquo;s Django 4 By Example, and is not my original work</description>
    </item>
    
    <item>
      <title>B. RESTful Movie Database API w/ extensive unit testing</title>
      <link>https://greent3.github.io/projects/creations/4_restful-imdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://greent3.github.io/projects/creations/4_restful-imdb/</guid>
      <description>The project is divided into 2 apps. Movielist app: handles all movie database functionality (adding movies to the database, querying lists of movies, creating/viewing reviews, etc.) along with their associated permissions. User app: handles user functionality (login, register, etc.) The unit testing covers all intented functionality for each level of authentication. The project also employs validators, pagination, and throttling.</description>
    </item>
    
  </channel>
</rss>
